name: Tests

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-unix:
    name: ${{ matrix.os }} - ${{ matrix.feature-name }}
    
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          # Dynamic linking tests
          - os: ubuntu-latest
            feature-name: "dynamic"
            feature-flags: ""
            install-deps: true
          - os: macos-latest
            feature-name: "dynamic"
            feature-flags: ""
            install-deps: true
          # Static unixODBC tests
          - os: ubuntu-latest
            feature-name: "static unixODBC"
            feature-flags: "--features static"
            install-deps: false
          - os: macos-latest
            feature-name: "static unixODBC"
            feature-flags: "--features static"
            install-deps: false
          # Static iODBC tests
          - os: ubuntu-latest
            feature-name: "static iODBC"
            feature-flags: "--features static,iodbc"
            install-deps: false
          - os: macos-latest
            feature-name: "static iODBC"
            feature-flags: "--features static,iodbc"
            install-deps: false
    
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # tag=v4.1.1
        with:
          submodules: 'recursive'
      
      - name: Install system ODBC
        if: matrix.install-deps
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y unixodbc-dev
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install unixodbc
          fi
        shell: bash
      
      - name: Build
        run: cargo build --verbose ${{ matrix.feature-flags }}
      
      - name: Run tests
        run: cargo test --verbose ${{ matrix.feature-flags }}

  test-windows:
    name: Windows - ${{ matrix.arch-name }}
    
    runs-on: windows-latest
    
    strategy:
      matrix:
        include:
          - arch-name: "64-bit"
            target: x86_64-pc-windows-msvc
          - arch-name: "32-bit"
            target: i686-pc-windows-msvc
    
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # tag=v4.1.1
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}
      
      - name: Build
        run: cargo build --verbose --target ${{ matrix.target }}
      
      - name: Run tests
        run: cargo test --verbose --target ${{ matrix.target }}
